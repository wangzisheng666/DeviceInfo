apply plugin: 'com.android.application'
apply plugin: 'img-optimizer'
//打包时，记得设置true启用
if (isNeedPackage.toBoolean() && isUseBooster.toBoolean()) {
    apply plugin: 'com.didiglobal.booster'
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.mobiles.devices"
        minSdkVersion build_versions.target_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    signingConfigs {
        if (isNeedPackage.toBoolean()) {
            release {
                storeFile file(app_release.storeFile)
                storePassword app_release.storePassword
                keyAlias app_release.keyAlias
                keyPassword app_release.keyPassword
            }
        }

        debug {
            storeFile file("./debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isNeedPackage.toBoolean()) {
                signingConfig signingConfigs.release

                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                def appID = properties.getProperty("APP_ID_UMENG")
                if (appID != null) {
                    buildConfigField "String", "APP_ID_UMENG", appID
                } else {
                    buildConfigField "String", "APP_ID_UMENG", '""'
                }
            } else {
                signingConfig signingConfigs.debug
                buildConfigField "String", "APP_ID_UMENG", '""'
            }
        }

        debug {
            debuggable true
            minifyEnabled false

            signingConfig signingConfigs.debug
            buildConfigField "String", "APP_ID_UMENG", '""'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation deps.junit
    androidTestImplementation deps.runner
    androidTestImplementation deps.espresso.core

    //分包
    implementation deps.androidx.multidex

    implementation 'com.alibaba.android:vlayout:1.3.0'
    //下拉刷新
    implementation 'com.github.xuexiangjys.SmartRefreshLayout:refresh-header:1.1.5'
    implementation 'com.github.xuexiangjys.SmartRefreshLayout:refresh-layout:1.1.5'
    //WebView
    implementation 'com.github.xuexiangjys.AgentWeb:agentweb-core:1.0.0'
    implementation 'com.github.xuexiangjys.AgentWeb:agentweb-download:1.0.0'//选填
    //腾讯的键值对存储mmkv
    implementation 'com.tencent:mmkv:1.2.10'
    //屏幕适配AutoSize
    implementation 'me.jessyan:autosize:1.1.2'
    //umeng统计
    implementation 'com.umeng.umsdk:common:9.3.8'
    implementation  'com.umeng.umsdk:asms:1.2.1'

    implementation 'org.apache.commons:commons-lang3:3.7'
    //预加载占位控件
    implementation 'me.samlss:broccoli:1.0.0'

    implementation 'com.zzhoujay.richtext:richtext:3.0.8'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //ANR异常捕获
    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'

    //美团多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'


    def libsuVersion = '5.0.2'

    // The core module that provides APIs to a shell
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"

    // Optional: APIs for creating root services. Depends on ":core"
    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"

    // Optional: Provides remote file system support
    implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"


    implementation 'com.alibaba:fastjson:1.1.70.android'
}
//自动添加X-Library依赖
apply from: 'x-library.gradle'
//walle多渠道打包
apply from: 'multiple-channel.gradle'


